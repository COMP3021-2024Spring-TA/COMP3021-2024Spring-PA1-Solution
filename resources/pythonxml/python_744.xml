<ast>
  <Module>
    <body>
      <FunctionDef name="decimalToBinary" returns="None" type_comment="None" lineno="4" col_offset="0" end_lineno="8" end_col_offset="24">
        <arguments vararg="None" kwarg="None">
          <posonlyargs/>
          <args>
            <arg arg="n" annotation="None" type_comment="None" lineno="4" col_offset="20" end_lineno="4" end_col_offset="21"/>
          </args>
          <kwonlyargs/>
          <kw_defaults/>
          <defaults/>
        </arguments>
        <body>
          <Expr lineno="5" col_offset="3" end_lineno="5" end_col_offset="78">
            <Constant value="Function to print binary number for the input decimal using recursion" kind="None" lineno="5" col_offset="3" end_lineno="5" end_col_offset="78"/>
          </Expr>
          <If lineno="6" col_offset="3" end_lineno="7" end_col_offset="28">
            <Compare lineno="6" col_offset="6" end_lineno="6" end_col_offset="11">
              <Name id="n" lineno="6" col_offset="6" end_lineno="6" end_col_offset="7">
                <Load/>
              </Name>
              <ops>
                <Gt/>
              </ops>
              <comparators>
                <Constant value="1" kind="None" lineno="6" col_offset="10" end_lineno="6" end_col_offset="11"/>
              </comparators>
            </Compare>
            <body>
              <Expr lineno="7" col_offset="7" end_lineno="7" end_col_offset="28">
                <Call lineno="7" col_offset="7" end_lineno="7" end_col_offset="28">
                  <Name id="decimalToBinary" lineno="7" col_offset="7" end_lineno="7" end_col_offset="22">
                    <Load/>
                  </Name>
                  <args>
                    <BinOp lineno="7" col_offset="23" end_lineno="7" end_col_offset="27">
                      <Name id="n" lineno="7" col_offset="23" end_lineno="7" end_col_offset="24">
                        <Load/>
                      </Name>
                      <FloorDiv/>
                      <Constant value="2" kind="None" lineno="7" col_offset="26" end_lineno="7" end_col_offset="27"/>
                    </BinOp>
                  </args>
                  <keywords/>
                </Call>
              </Expr>
            </body>
            <orelse/>
          </If>
          <Expr lineno="8" col_offset="3" end_lineno="8" end_col_offset="24">
            <Call lineno="8" col_offset="3" end_lineno="8" end_col_offset="24">
              <Name id="print" lineno="8" col_offset="3" end_lineno="8" end_col_offset="8">
                <Load/>
              </Name>
              <args>
                <BinOp lineno="8" col_offset="9" end_lineno="8" end_col_offset="14">
                  <Name id="n" lineno="8" col_offset="9" end_lineno="8" end_col_offset="10">
                    <Load/>
                  </Name>
                  <Mod/>
                  <Constant value="2" kind="None" lineno="8" col_offset="13" end_lineno="8" end_col_offset="14"/>
                </BinOp>
              </args>
              <keywords>
                <keyword arg="end" lineno="8" col_offset="15" end_lineno="8" end_col_offset="23">
                  <Constant value="" kind="None" lineno="8" col_offset="21" end_lineno="8" end_col_offset="23"/>
                </keyword>
              </keywords>
            </Call>
          </Expr>
        </body>
        <decorator_list/>
      </FunctionDef>
      <If lineno="10" col_offset="0" end_lineno="13" end_col_offset="11">
        <Compare lineno="10" col_offset="3" end_lineno="10" end_col_offset="25">
          <Name id="__name__" lineno="10" col_offset="3" end_lineno="10" end_col_offset="11">
            <Load/>
          </Name>
          <ops>
            <Eq/>
          </ops>
          <comparators>
            <Constant value="__main__" kind="None" lineno="10" col_offset="15" end_lineno="10" end_col_offset="25"/>
          </comparators>
        </Compare>
        <body>
          <Assign type_comment="None" lineno="11" col_offset="4" end_lineno="11" end_col_offset="86">
            <targets>
              <Name id="userInput" lineno="11" col_offset="4" end_lineno="11" end_col_offset="13">
                <Store/>
              </Name>
            </targets>
            <Call lineno="11" col_offset="16" end_lineno="11" end_col_offset="86">
              <Name id="int" lineno="11" col_offset="16" end_lineno="11" end_col_offset="19">
                <Load/>
              </Name>
              <args>
                <Call lineno="11" col_offset="20" end_lineno="11" end_col_offset="85">
                  <Name id="input" lineno="11" col_offset="20" end_lineno="11" end_col_offset="25">
                    <Load/>
                  </Name>
                  <args>
                    <Constant value="Enter the decimal number to find its binary equivalent: " kind="None" lineno="11" col_offset="26" end_lineno="11" end_col_offset="84"/>
                  </args>
                  <keywords/>
                </Call>
              </args>
              <keywords/>
            </Call>
          </Assign>
          <Expr lineno="12" col_offset="4" end_lineno="12" end_col_offset="30">
            <Call lineno="12" col_offset="4" end_lineno="12" end_col_offset="30">
              <Name id="decimalToBinary" lineno="12" col_offset="4" end_lineno="12" end_col_offset="19">
                <Load/>
              </Name>
              <args>
                <Name id="userInput" lineno="12" col_offset="20" end_lineno="12" end_col_offset="29">
                  <Load/>
                </Name>
              </args>
              <keywords/>
            </Call>
          </Expr>
          <Expr lineno="13" col_offset="4" end_lineno="13" end_col_offset="11">
            <Call lineno="13" col_offset="4" end_lineno="13" end_col_offset="11">
              <Name id="print" lineno="13" col_offset="4" end_lineno="13" end_col_offset="9">
                <Load/>
              </Name>
              <args/>
              <keywords/>
            </Call>
          </Expr>
        </body>
        <orelse/>
      </If>
    </body>
    <type_ignores/>
  </Module>
</ast>
