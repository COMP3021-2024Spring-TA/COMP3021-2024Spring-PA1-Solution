<ast>
  <Module>
    <body>
      <FunctionDef name="binaryToDecimal" returns="None" type_comment="None" lineno="4" col_offset="0" end_lineno="13" end_col_offset="68">
        <arguments vararg="None" kwarg="None">
          <posonlyargs/>
          <args>
            <arg arg="binary" annotation="None" type_comment="None" lineno="4" col_offset="20" end_lineno="4" end_col_offset="26"/>
          </args>
          <kwonlyargs/>
          <kw_defaults/>
          <defaults/>
        </arguments>
        <body>
          <Expr lineno="5" col_offset="4" end_lineno="5" end_col_offset="80">
            <Constant value="This function calculates the decimal equivalent to given binary number" kind="None" lineno="5" col_offset="4" end_lineno="5" end_col_offset="80"/>
          </Expr>
          <Assign type_comment="None" lineno="6" col_offset="4" end_lineno="6" end_col_offset="20">
            <targets>
              <Name id="binary1" lineno="6" col_offset="4" end_lineno="6" end_col_offset="11">
                <Store/>
              </Name>
            </targets>
            <Name id="binary" lineno="6" col_offset="14" end_lineno="6" end_col_offset="20">
              <Load/>
            </Name>
          </Assign>
          <Assign type_comment="None" lineno="7" col_offset="4" end_lineno="7" end_col_offset="27">
            <targets>
              <Tuple lineno="7" col_offset="4" end_lineno="7" end_col_offset="17">
                <elts>
                  <Name id="decimal" lineno="7" col_offset="4" end_lineno="7" end_col_offset="11">
                    <Store/>
                  </Name>
                  <Name id="i" lineno="7" col_offset="13" end_lineno="7" end_col_offset="14">
                    <Store/>
                  </Name>
                  <Name id="n" lineno="7" col_offset="16" end_lineno="7" end_col_offset="17">
                    <Store/>
                  </Name>
                </elts>
                <Store/>
              </Tuple>
            </targets>
            <Tuple lineno="7" col_offset="20" end_lineno="7" end_col_offset="27">
              <elts>
                <Constant value="0" kind="None" lineno="7" col_offset="20" end_lineno="7" end_col_offset="21"/>
                <Constant value="0" kind="None" lineno="7" col_offset="23" end_lineno="7" end_col_offset="24"/>
                <Constant value="0" kind="None" lineno="7" col_offset="26" end_lineno="7" end_col_offset="27"/>
              </elts>
              <Load/>
            </Tuple>
          </Assign>
          <While lineno="8" col_offset="4" end_lineno="12" end_col_offset="14">
            <Compare lineno="8" col_offset="10" end_lineno="8" end_col_offset="21">
              <Name id="binary" lineno="8" col_offset="10" end_lineno="8" end_col_offset="16">
                <Load/>
              </Name>
              <ops>
                <NotEq/>
              </ops>
              <comparators>
                <Constant value="0" kind="None" lineno="8" col_offset="20" end_lineno="8" end_col_offset="21"/>
              </comparators>
            </Compare>
            <body>
              <Assign type_comment="None" lineno="9" col_offset="8" end_lineno="9" end_col_offset="25">
                <targets>
                  <Name id="dec" lineno="9" col_offset="8" end_lineno="9" end_col_offset="11">
                    <Store/>
                  </Name>
                </targets>
                <BinOp lineno="9" col_offset="14" end_lineno="9" end_col_offset="25">
                  <Name id="binary" lineno="9" col_offset="14" end_lineno="9" end_col_offset="20">
                    <Load/>
                  </Name>
                  <Mod/>
                  <Constant value="10" kind="None" lineno="9" col_offset="23" end_lineno="9" end_col_offset="25"/>
                </BinOp>
              </Assign>
              <Assign type_comment="None" lineno="10" col_offset="8" end_lineno="10" end_col_offset="43">
                <targets>
                  <Name id="decimal" lineno="10" col_offset="8" end_lineno="10" end_col_offset="15">
                    <Store/>
                  </Name>
                </targets>
                <BinOp lineno="10" col_offset="18" end_lineno="10" end_col_offset="43">
                  <Name id="decimal" lineno="10" col_offset="18" end_lineno="10" end_col_offset="25">
                    <Load/>
                  </Name>
                  <Add/>
                  <BinOp lineno="10" col_offset="28" end_lineno="10" end_col_offset="43">
                    <Name id="dec" lineno="10" col_offset="28" end_lineno="10" end_col_offset="31">
                      <Load/>
                    </Name>
                    <Mult/>
                    <Call lineno="10" col_offset="34" end_lineno="10" end_col_offset="43">
                      <Name id="pow" lineno="10" col_offset="34" end_lineno="10" end_col_offset="37">
                        <Load/>
                      </Name>
                      <args>
                        <Constant value="2" kind="None" lineno="10" col_offset="38" end_lineno="10" end_col_offset="39"/>
                        <Name id="i" lineno="10" col_offset="41" end_lineno="10" end_col_offset="42">
                          <Load/>
                        </Name>
                      </args>
                      <keywords/>
                    </Call>
                  </BinOp>
                </BinOp>
              </Assign>
              <Assign type_comment="None" lineno="11" col_offset="8" end_lineno="11" end_col_offset="27">
                <targets>
                  <Name id="binary" lineno="11" col_offset="8" end_lineno="11" end_col_offset="14">
                    <Store/>
                  </Name>
                </targets>
                <BinOp lineno="11" col_offset="17" end_lineno="11" end_col_offset="27">
                  <Name id="binary" lineno="11" col_offset="17" end_lineno="11" end_col_offset="23">
                    <Load/>
                  </Name>
                  <FloorDiv/>
                  <Constant value="10" kind="None" lineno="11" col_offset="25" end_lineno="11" end_col_offset="27"/>
                </BinOp>
              </Assign>
              <AugAssign lineno="12" col_offset="8" end_lineno="12" end_col_offset="14">
                <Name id="i" lineno="12" col_offset="8" end_lineno="12" end_col_offset="9">
                  <Store/>
                </Name>
                <Add/>
                <Constant value="1" kind="None" lineno="12" col_offset="13" end_lineno="12" end_col_offset="14"/>
              </AugAssign>
            </body>
            <orelse/>
          </While>
          <Expr lineno="13" col_offset="4" end_lineno="13" end_col_offset="68">
            <Call lineno="13" col_offset="4" end_lineno="13" end_col_offset="68">
              <Name id="print" lineno="13" col_offset="4" end_lineno="13" end_col_offset="9">
                <Load/>
              </Name>
              <args>
                <Call lineno="13" col_offset="10" end_lineno="13" end_col_offset="67">
                  <Attribute attr="format" lineno="13" col_offset="10" end_lineno="13" end_col_offset="49">
                    <Constant value="Decimal equivalent of {} is {}" kind="None" lineno="13" col_offset="10" end_lineno="13" end_col_offset="42"/>
                    <Load/>
                  </Attribute>
                  <args>
                    <Name id="binary1" lineno="13" col_offset="50" end_lineno="13" end_col_offset="57">
                      <Load/>
                    </Name>
                    <Name id="decimal" lineno="13" col_offset="59" end_lineno="13" end_col_offset="66">
                      <Load/>
                    </Name>
                  </args>
                  <keywords/>
                </Call>
              </args>
              <keywords/>
            </Call>
          </Expr>
        </body>
        <decorator_list/>
      </FunctionDef>
      <If lineno="15" col_offset="0" end_lineno="17" end_col_offset="30">
        <Compare lineno="15" col_offset="3" end_lineno="15" end_col_offset="25">
          <Name id="__name__" lineno="15" col_offset="3" end_lineno="15" end_col_offset="11">
            <Load/>
          </Name>
          <ops>
            <Eq/>
          </ops>
          <comparators>
            <Constant value="__main__" kind="None" lineno="15" col_offset="15" end_lineno="15" end_col_offset="25"/>
          </comparators>
        </Compare>
        <body>
          <Assign type_comment="None" lineno="16" col_offset="4" end_lineno="16" end_col_offset="87">
            <targets>
              <Name id="userInput" lineno="16" col_offset="4" end_lineno="16" end_col_offset="13">
                <Store/>
              </Name>
            </targets>
            <Call lineno="16" col_offset="16" end_lineno="16" end_col_offset="87">
              <Name id="int" lineno="16" col_offset="16" end_lineno="16" end_col_offset="19">
                <Load/>
              </Name>
              <args>
                <Call lineno="16" col_offset="20" end_lineno="16" end_col_offset="86">
                  <Name id="input" lineno="16" col_offset="20" end_lineno="16" end_col_offset="25">
                    <Load/>
                  </Name>
                  <args>
                    <Constant value="Enter the binary number to check its decimal equivalent: " kind="None" lineno="16" col_offset="26" end_lineno="16" end_col_offset="85"/>
                  </args>
                  <keywords/>
                </Call>
              </args>
              <keywords/>
            </Call>
          </Assign>
          <Expr lineno="17" col_offset="4" end_lineno="17" end_col_offset="30">
            <Call lineno="17" col_offset="4" end_lineno="17" end_col_offset="30">
              <Name id="binaryToDecimal" lineno="17" col_offset="4" end_lineno="17" end_col_offset="19">
                <Load/>
              </Name>
              <args>
                <Name id="userInput" lineno="17" col_offset="20" end_lineno="17" end_col_offset="29">
                  <Load/>
                </Name>
              </args>
              <keywords/>
            </Call>
          </Expr>
        </body>
        <orelse/>
      </If>
    </body>
    <type_ignores/>
  </Module>
</ast>
